/* eslint-disable */
export default async () => {
    const t = {
        ["./features/users/entities/user.entity"]: await import("./features/users/entities/user.entity"),
        ["./shared/constants"]: await import("./shared/constants"),
        ["./features/vehicles/entities/vehicle.entity"]: await import("./features/vehicles/entities/vehicle.entity"),
        ["./features/auth/dto/sign-up-request-response.dto"]: await import("./features/auth/dto/sign-up-request-response.dto"),
        ["./features/profile/dto/profile.dto"]: await import("./features/profile/dto/profile.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./features/vehicles/entities/vehicle.entity"), { "Vehicle": { internalId: { required: true, type: () => Number }, id: { required: true, type: () => String }, plate: { required: true, type: () => String }, brand: { required: true, type: () => String }, color: { required: true, type: () => String }, model: { required: true, type: () => String }, seatQuantity: { required: true, type: () => Number }, createdAt: { required: true }, updatedAt: { required: true }, deletedAt: { required: true }, driver: { required: true, type: () => t["./features/users/entities/user.entity"].User } } }], [import("./features/users/entities/user.entity"), { "User": { internalId: { required: true, type: () => Number }, id: { required: true, type: () => String }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, encryptedPassword: { required: true, type: () => String }, gender: { required: true, enum: t["./shared/constants"].Gender }, type: { required: true, enum: t["./shared/constants"].UserType }, walkDistance: { required: true, type: () => Number }, preferredRole: { required: true, enum: t["./shared/constants"].UserRole }, profilePicFilename: { required: true, type: () => String }, phoneNumber: { required: true, type: () => String, nullable: true }, emergencyContactPhoneNumber: { required: true, type: () => String, nullable: true }, isDriver: { required: true, type: () => Boolean }, isActive: { required: true, type: () => Boolean }, isBlocked: { required: true, type: () => Boolean }, createdAt: { required: true }, updatedAt: { required: true }, deletedAt: { required: true }, vehicles: { required: true, type: () => [t["./features/vehicles/entities/vehicle.entity"].Vehicle] } } }], [import("./features/auth/dto/request-sign-up.dto"), { "RequestSignUpDto": { email: { required: true, type: () => String } } }], [import("./features/auth/dto/sign-in.dto"), { "SignInDto": { email: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./features/auth/entities/sign-up-request.entity"), { "SignUpRequest": { id: { required: true, type: () => String }, email: { required: true, type: () => String }, expirationDate: { required: true }, createdAt: { required: true }, updatedAt: { required: true } } }], [import("./features/auth/dto/sign-up.dto"), { "SignUpDto": { firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, password: { required: true, type: () => String }, gender: { required: true, enum: t["./shared/constants"].Gender }, type: { required: true, enum: t["./shared/constants"].UserType }, profilePic: { required: true, type: () => Object }, signUpRequestId: { required: true, type: () => String } } }], [import("./features/auth/dto/retrieve-sign-up-params.dto"), { "RetrieveSignUpParamsDto": { id: { required: true, type: () => String } } }], [import("./features/auth/dto/sign-up-request-response.dto"), { "SignUpRequestResponseDto": { id: { required: true, type: () => String }, email: { required: true, type: () => String }, expirationDate: { required: true } } }], [import("./features/profile/dto/profile.dto"), { "ProfileDto": { firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, gender: { required: true, enum: t["./shared/constants"].Gender }, type: { required: true, enum: t["./shared/constants"].UserType }, walkDistance: { required: true, type: () => Number }, preferredRole: { required: true, enum: t["./shared/constants"].UserRole }, profilePicFilename: { required: true, type: () => String }, phoneNumber: { required: true, type: () => String, nullable: true }, emergencyContactPhoneNumber: { required: true, type: () => String, nullable: true }, isDriver: { required: true, type: () => Boolean }, isActive: { required: true, type: () => Boolean }, isBlocked: { required: true, type: () => Boolean } } }], [import("./features/profile/dto/update-profile.dto"), { "UpdateProfileDto": { profilePic: { required: false, type: () => Object }, preferredRole: { required: false, enum: t["./shared/constants"].UserRole }, walkDistance: { required: false, type: () => Number, minimum: 1 }, phoneNumber: { required: false, type: () => String }, emergencyContactPhoneNumber: { required: false, type: () => String } } }], [import("./features/users/dto/create-user.dto"), { "CreateUserDto": { id: { required: true, type: () => String }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, password: { required: true, type: () => String }, gender: { required: true, enum: t["./shared/constants"].Gender }, type: { required: true, enum: t["./shared/constants"].UserType }, walkDistance: { required: true, type: () => Number }, preferredRole: { required: true, type: () => String }, profilePic: { required: true, type: () => String }, phoneNumber: { required: true, type: () => String }, emergencyContactPhoneNumber: { required: true, type: () => String }, isDriver: { required: true, type: () => Boolean }, isActive: { required: true, type: () => Boolean }, isBlocked: { required: true, type: () => Boolean } } }], [import("./features/users/dto/update-user.dto"), { "UpdateUserDto": {} }], [import("./features/profile/entities/profile.entity"), { "Profile": {} }], [import("./features/vehicles/dto/create-vehicle.dto"), { "CreateVehicleDto": { plate: { required: true, type: () => String }, brand: { required: true, type: () => String }, color: { required: true, type: () => String }, model: { required: true, type: () => String }, seatQuantity: { required: true, type: () => Number, minimum: 1 } } }], [import("./features/vehicles/dto/update-vehicle.dto"), { "UpdateVehicleDto": {} }]], "controllers": [[import("./features/auth/auth.controller"), { "AuthController": { "retrieveSignUpRequest": { type: t["./features/auth/dto/sign-up-request-response.dto"].SignUpRequestResponseDto }, "requestSignUp": { type: String }, "signUp": { type: String }, "signIn": {} } }], [import("./features/profile/profile.controller"), { "ProfileController": { "findMe": { type: t["./features/profile/dto/profile.dto"].ProfileDto }, "updateMe": { type: String } } }], [import("./features/users/users.controller"), { "UsersController": { "create": {}, "findAll": { type: [t["./features/users/entities/user.entity"].User] }, "findOne": { type: t["./features/users/entities/user.entity"].User }, "update": {}, "remove": { type: t["./features/users/entities/user.entity"].User } } }], [import("./app/files.controller"), { "FilesController": { "retrieveFile": {} } }], [import("./features/vehicles/vehicles.controller"), { "VehiclesController": { "create": { type: Object }, "findAll": { type: String }, "findOne": { type: String }, "update": { type: String }, "remove": { type: String } } }]] } };
};